version: "3"

networks:
    laravel:
    web:
        external: true

services:
    nginx:
        image: nginx:stable-alpine
        restart: always
        ports:
            - 80
        container_name: traffic_nginx
        environment:
            VIRTUAL_HOST: api.traffic.tincalab.com
            VIRTUAL_PORT: 80
            LETSENCRYPT_HOST: api.traffic.tincalab.com
            LETSENCRYPT_EMAIL: desarrollo@tincalab.com
        volumes:
            - ./:/var/www/html
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php
            - mysql
        networks:
            - laravel
            - web

    mysql:
        image: mariadb
        container_name: traffic_mysql
        restart: always
        volumes:
            - /var/docker-data/traffic-mysql-data:/var/lib/mysql
        ports:
            - 3309:3306
        environment:
            MYSQL_DATABASE: traffic
            TZ: UTC
            MYSQL_USER: traffic
            MYSQL_PASSWORD: traffic
            MYSQL_ROOT_PASSWORD: traffic
            SERVICE_NAME: mysql
        networks:
            - laravel
            - web

    php:
        build: .
        container_name: traffic_php
        environment:
            TZ: America/Bogota
        restart: always
        volumes:
            - ./:/var/www/html
        ports:
            - 9000
        networks:
            - laravel

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        restart: always
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
        container_name: traffic_phpmyadmin
        environment:
            VIRTUAL_HOST: pma.traffic.tincalab.com
            VIRTUAL_PORT: 80
            LETSENCRYPT_HOST: pma.traffic.tincalab.com
            LETSENCRYPT_EMAIL: desarrollo@tincalab.com
            PMA_HOST: mysql
            MYSQL_ROOT_PASSWORD: traffic
            TZ: America/Bogota
        ports:
            - 80
        depends_on:
            - mysql
        networks:
            - laravel
            - web

    # Importante para usar docker-compose run --rm composer install (por ejemplo)
    composer:
        image: composer:latest
        container_name: traffic_composer
        volumes:
            - ./:/var/www/html
        working_dir: /var/www/html
        environment:
            TZ: America/Bogota
        depends_on:
            - php
        networks:
            - laravel

    # Importante para usar docker-compose run --rm artisan migrate (por ejemplo)
    artisan:
        build: .
        container_name: traffic_artisan
        volumes:
            - ./:/var/www/html
        depends_on:
            - mysql
        working_dir: /var/www/html
        entrypoint: [ "php", "/var/www/html/artisan" ]
        networks:
            - laravel
